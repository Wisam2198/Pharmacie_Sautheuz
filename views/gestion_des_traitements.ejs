<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.css">
  <title>Gestion des traitements</title>
</head>

<body>
  <div class="bg-gray-100 m-0 overflow-hidden">
    <!-- Barre de navigation horizontale -->
    <nav class="bg-green-500 p-4 flex justify-between items-center text-white">
      <div>
        <span class="text-lg font-bold">Pharmacie Sautheuz</span>
      </div>
      <div class="flex items-center">
        <input type="text" placeholder="Recherche..."
          class="px-2 py-1 border border-gray-300 rounded-lg bg-gray-100 text-black">
        <button
          class="p-2.5 rounded-full items-center bg-gradient-to-r from-green-600 to-blue-500 hover:to-blue-600 ml-3">
          <img src="<%= loupe %>" alt="Loupe Icon" class="w-4 h-4">
        </button>
      </div>
    </nav>
  </div>


  <div class="flex">
    <!-- Barre de navigation verticale -->
    <nav class="bg-blue-900 text-white p-4 flex-shrink-0 w-1/6 h-screen overflow-y-auto">
      <a href="/espace_pharmaciens" class="block px-4 py-2 flex-grow text-lg">Espace Pharmacien</a></br></br>
      <a href="/gestion_des_traitements" class="block px-4 py-2 flex-grow text-lg">Gestion des Traitements</a></br></br>
      <a href="/stock_de_medicaments" class="block px-4 py-2 flex-grow text-lg">Stock de Médicaments</a></br></br>
      <a href="/contact" class="block px-4 py-2 flex-grow text-lg">Contact</a></br></br>
      <a href="/a_propos" class="block px-4 py-1 flex-grow text-lg">À Propos</a></br></br>
      <a href="/faq" class="block px-4 py-2 flex-grow text-lg">FAQ</a></br></br>
      <a href="/conditions_utilisation" class="block px-4 py-2 flex-grow text-lg">Conditions d'Utilisation</a></br></br>
      <a href="/politique_confidentialite" class="block px-4 py-2 flex-grow text-lg">Politique de
        Confidentialité</a></br></br>
      <a href="/deconnexion" class="block px-4 py-2 flex-grow text-lg">Déconnexion</a>
    </nav>


    <div class="flex-grow overflow-y-auto p-4">
      <h1 class="text-2xl font-bold mb-40 underline">Gestion des traitements</h1>

      <div class="bg-gray-100 p-60 shadow-md mb-4 rounded-md flex items-start">
        <select id="selectClient" class="p-2 border border-gray-300 rounded-md mr-20"></select>
        <button id="btnOuvrirFenetre" class="bg-gray-400 p-2 rounded-md"
          onclick="mettreAJourPersonneSelectionnee()">Gérer ses traitements</button>
      </div>

    </div>
  </div>

  <!-- Fenêtre modale -->
  <div id="gestTraitements"
    class="fixed top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
    <div
      class="bg-gradient-to-r from-blue-600 to-green-400 p-6 rounded border border-500 border-black sm:w-1/2 md:w-1/3 lg:w-1/4 sm:h-2/3 md:h-1/2 lg:h-1/3 flex flex-col relative items-center justify-center">
      <img src="<%= croix %>" alt="Fermer" class="absolute top-4 right-4 w-6 h-6 cursor-pointer" id="btnFermerFenetre">
      <p class="text-center mb-4">Traitements de : <span id="gestTraitementsText"></span></p>
      <p id="maladieLabel"></p>
      <p id="medicamentLabel"></p>
    </div>
  </div>

  <script>

    const ouvrirFenetre = document.getElementById('btnOuvrirFenetre');
    const fermerFenetre = document.getElementById('btnFermerFenetre');
    const gestionTraitements = document.getElementById('gestTraitements');


    ouvrirFenetre.addEventListener('click', () => {
      gestionTraitements.classList.remove('hidden');
    });

    fermerFenetre.addEventListener('click', () => {
      gestionTraitements.classList.add('hidden');
    });

    function mettreAJourPersonneSelectionnee() {
      const selectClient = document.getElementById('selectClient');
      const nomPrenom = selectClient.options[selectClient.selectedIndex].text;
      const gestionTraitementsText = document.getElementById('gestTraitementsText');

      // Extraire le nom et prénom
      const [nom, prenom] = nomPrenom.split(' ');

      // Récupère les informations du client
      fetch(`/info_client/${nomPrenom}`)
        .then(response => {
          if (!response.ok) {
            throw new Error(`Erreur HTTP! Statut: ${response.status}`);
          }
          return response.json();
        })
        .then(clientInfo => {
          // Met à jour le texte dans la fenêtre modale avec le champ "maladie"
          gestionTraitementsText.textContent = `${nomPrenom} - Maladie : ${clientInfo.maladie} `;

      // Récupérer les informations du médicament
      fetch(`/medicament_info/${nomPrenom}`)
        .then(response => {
          if (!response.ok) {
            throw new Error(`Erreur HTTP! Statut: ${response.status}`);
          }
          return response.json();
        })
        .then(medicamentInfo => {
          // Met à jour le texte dans la fenêtre modale avec le champ "médicament"
           gestionTraitementsText.textContent += ` - Médicament : ${medicamentInfo.nom}`;
        })
        .catch(error => {
          console.error("Erreur lors de la récupération des informations du médicament:", error);
        });
      })
        .catch(error => {
          console.error("Erreur lors de la récupération des informations du client:", error);
        });
    }

    // Fonction pour charger la liste des médicaments
    function chargerListeClients() {
      // Récupère la liste des médicaments depuis le serveur
      fetch('/clients')
        .then(response => {
          if (!response.ok) {
            throw new Error(`Erreur HTTP! Statut: ${response.status}`);
          }
          return response.json();
        })
        .then(listeClients => {
          const selectClient = document.getElementById('selectClient');

          // Vide la liste déroulante
          selectClient.innerHTML = "";

          // Ajoute chaque médicament à la liste déroulante
          listeClients.forEach(clients => {
            const option = document.createElement("option");
            option.text = clients.nom + " " + clients.prenom;
            option.value = clients.nom + " " + clients.prenom;
            selectClient.add(option);
          });
        })
        .catch(error => {
          console.error("Erreur lors de la récupération de la liste des médicaments:", error);
        });
    }


    document.addEventListener('DOMContentLoaded', () => {
      // Chargez les clients lors du chargement de la page
      chargerListeClients();
    });

  </script>

</body>

</html>